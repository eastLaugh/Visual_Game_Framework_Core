using System.Collections;
using System.Collections.Generic;
using System.Transactions;          //????????????.NET??????
using UnityEngine;
using UnityEngine.Events;


//????????????????????????????????????????????????
namespace VGF.Inventory
{
    //???MonoBehaviour??????????????????????????§Ö??????
    public class ItemBase : MonoBehaviour
    {
        //?§Ø????????????
        public UnityEvent OnGet = new UnityEvent();
        //?????????????
        [SerializeField] private SpriteRenderer spriteRenderer;
        //???????????????"E"????????????
        [SerializeField] private GameObject KeyboardTip;
        //????????????????????
        private Collider coll;
        //????????????????????????????
        private ItemDetails itemDetails;
        //?????§Ø????????????????
        private bool approach = false;
        //?????????????ID
        public int itemID;

        //???????????????,????????spriteRenderer??coll??KeyboardTip????
        private void Awake()
        {
            spriteRenderer = GetComponent<SpriteRenderer>();
            coll = GetComponent<Collider>();
            KeyboardTip.SetActive(false);
        }

        //????????¦Á??????????????????????????????
        void Start()
        {
            if (itemID != 0) InitItemSprite();
        }

        /*??????????????????????????????
        ?????????????"E"???????????????????????????*/
        private void Update()
        {
            if (approach)
            {
                if (Input.GetKeyDown(KeyCode.E))
                {
                    bool flag = InventoryManager.Instance.AddItem(itemID, 1);
                    if (flag)
                    {
                        gameObject.SetActive(false);
                        OnGet?.Invoke();
                    }
                }
            }
        }

        //?????????????????????????????????????????????spriteRenderer
        public void InitItemSprite()
        {
            itemDetails = InventoryManager.Instance.GetItemDetails(itemID);
            if (itemDetails != null)
            {
                spriteRenderer.sprite = itemDetails.itemWorldSprite == null ? itemDetails.itemIcon : itemDetails.itemWorldSprite;
            }
        }

        /*????????????????????????????????????"Player"??
        ????????"approach"?true??????KeyboardTip?????§Ø?*/
        private void OnTriggerEnter(Collider other)
        {
            if (other.gameObject.tag == "Player")
            {
                approach = true;
                KeyboardTip.SetActive(true);
            }
        }

        /*?????????????????????????????????????"Player"??
        ????????"approach"?false??????KeyboardTip???§Ø?*/
        private void OnTriggerExit(Collider other)
        {
            if (other.gameObject.tag == "Player")
            {
                approach = false;
                KeyboardTip.SetActive(false);
            }
        }
    }
}